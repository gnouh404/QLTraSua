@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/UserLayout.cshtml";


}
@model IEnumerable<Product>
<div id="layoutSidenav_content">
    <div id="layoutSidenav_nav" style="width: 530px;">
        <div class="order-center">
            <!-- <div class="top-center">
              <div class="top-center-left">
                <i class="fas fa-map-marker-alt"></i>
                <span>Hà Nội</span>
              </div>
              <div class="top-center-right">
                <div class="view-grid">
                  <i class="fas fa-th-large"></i>
                </div>
              </div>
            </div> -->
            <div class="main-center">
                @foreach (string category in new[] { "Món Nổi Bật", "Instant Milk Tea", "Fresh Fruit Tea",
                "Macchiato Cream Cheese", "Trà Sữa", "Cà Phê", "Ice Cream", "Special Menu"
                })
                {
                    string input = category.ToLower();

                    input = input.Replace("à", "a")
                    .Replace("á", "a")
                    .Replace("ả", "a")
                    .Replace("ã", "a")
                    .Replace("ạ", "a")
                    .Replace("â", "a")
                    .Replace("ầ", "a")
                    .Replace("ấ", "a")
                    .Replace("ẩ", "a")
                    .Replace("ẫ", "a")
                    .Replace("ậ", "a")
                    .Replace("ê", "e")
                    .Replace("ề", "e")
                    .Replace("ế", "e")
                    .Replace("ể", "e")
                    .Replace("ễ", "e")
                    .Replace("ệ", "e")
                    .Replace("ù", "u")
                    .Replace("ú", "u")
                    .Replace("ủ", "u")
                    .Replace("ũ", "u")
                    .Replace("ụ", "u")
                    .Replace("ư", "u")
                    .Replace("ừ", "u")
                    .Replace("ứ", "u")
                    .Replace("ử", "u")
                    .Replace("ữ", "u")
                    .Replace("ự", "u");

                    // Tạo một chuỗi mới để chứa kết quả
                    string result = string.Empty;

                    // Duyệt qua từng ký tự trong chuỗi
                    foreach (char c in input)
                    {
                        if (c == ' ')
                        {
                            // Nếu gặp khoảng trắng, thêm dấu '-' vào kết quả
                            result += '-';
                        }
                        else if (char.IsLetter(c)) // Chỉ thêm ký tự chữ cái
                        {
                            result += c;
                        }
                    }
                    <div class="category" catslug="@result">
                        <div class="category-name">

                            <div class="left">@category</div>

                            <div class="right">
                                <i class="fas fa-angle-down" aria-hidden="true"></i>
                            </div>
                        </div>
                        <div class="list-product" style="display:block;">
                            <div class="list-product-flex">
                                @foreach (var product in Model)
                                {

                                    if (string.Equals(product.Category.CategoryName.Trim(), category.Trim(), StringComparison.OrdinalIgnoreCase))
                                    {

                                        <div class="product" product_id="@product.ProductID">
                                            <div class="tags">
                                            </div>
                                            <img src="@product.ImageUrl" alt="">
                                            <div class="product-name">@product.ProductName</div>
                                            <div class="product-price">
                                                <p class="product-origin-price">
                                                    @product.ProductPrice.ToString("N0") VND
                                                </p>
                                            </div>
                                            <button type="button" class="btn-increase"
                                                    onclick="loadProductDetails(@product.ProductID, '@product.ProductName', @product.ProductPrice, '@product.ImageUrl')">
                                                +
                                            </button>
                                        </div>
                                    }

                                }
                            </div>
                        </div>
                    </div>
                }
            </div>

        </div>
    </div>
</div>
<!-- Modal -->
<div class="modal fade" id="productModal" tabindex="-1" aria-labelledby="productModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="productModalLabel">Chi tiết sản phẩm</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p id="productDetails"></p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
               @*   <button type="button" class="btn btn-primary" data-bs-dismiss="modal">Thêm</button> *@
            </div>
        </div>
    </div>
</div>
<script>
    // Lấy tất cả các danh mục
    let cart = [];
    let selectedToppings = [];
    let selectedSugar = "100"; // Mặc định là 100% đường
    let selectedIce = "100"; // Mặc định là 100% đá
    let selectedSize = 'M'; // Mặc định là size M
    let selectedQuantity = 1;

    var categories = document.querySelectorAll('.category-name');


    categories.forEach(function (category) {
        // Thêm sự kiện click cho từng danh mục
        category.addEventListener('click', function () {
            // Lấy danh sách sản phẩm liên quan
            var listProduct = this.nextElementSibling;

            // Ẩn tất cả các danh sách sản phẩm khác
            // document.querySelectorAll('.list-product').forEach(function (list) {
            //     if (list !== listProduct) {
            //         list.style.display = 'none'; // Ẩn các danh sách khác
            //     }
            // });

            // Toggle hiển thị danh sách sản phẩm của danh mục hiện tại
            if (listProduct.style.display === 'none' || listProduct.style.display === '') {
                listProduct.style.display = 'block'; // Hiển thị nếu đang ẩn
            } else {
                listProduct.style.display = 'none'; // Ẩn nếu đang hiện
            }
        });
    });

    function loadProductDetails(productId, productName, productPrice, imgURL) {
        const data = {
            img: imgURL,
            name: productName,
            price: productPrice,
            priceL: productPrice + 3000,
            toppingPrices: {
                "Trân châu Baby": 8000,
                "Trân châu Hoàng Kim": 8000,
                "Trân châu sợi": 8000,
                "Rau câu": 8000,
                "Pudding": 8000,
                "Đậu đỏ": 8000,
                "Cream cake": 9000,
                "Khoai môn": 9000,
                "Trân châu Sương Mai": 9000
            }
        };

        let quantity = 1; // khởi tạo số lượng sản phẩm
        let selectedSizePrice = data.price; // giá ban đầu
        console.log("Giá:", selectedSizePrice);
        // Cập nhật nội dung của modal
        document.getElementById("productDetails").innerHTML = `
                            <div style="display: flex; align-items: flex-start; gap: 20px;">
                                <div>
                                    <img src="${data.img}" alt="${data.name}" width="200px">
                                </div>
                                <div>
                                    <strong>Tên sản phẩm:</strong> ${data.name} <br>
                                    <strong>Giá:</strong> <span id="basePrice">${selectedSizePrice.toLocaleString()} VND</span> <br>
                                    <strong>Mô tả:</strong> <br><br>

                                    <!-- Tăng giảm số lượng và hiển thị giá -->
                                    <div style="display: flex; align-items: center; gap: 10px;">
                                        <button onclick="decreaseQuantity()" style="border-radius: 5px;">-</button>
                                        <span id="quantity">${quantity}</span>
                                        <button onclick="increaseQuantity()" style="border-radius: 5px;">+</button>
                                        <!-- Nút hiển thị tổng giá -->
                                        <button id="priceButton" style="margin-left: 20px;border-radius: 10px;"
                                                    onclick="addToCart('${data.name}', parseInt(this.innerText.replace(' VND', '').replace(/,/g, '')),
                                                                ${quantity}, '${data.img}', selectedSize, selectedSugar, selectedIce)"
                                                                    data-bs-dismiss="modal">
                                                ${(selectedSizePrice * quantity).toLocaleString()} VND
                                        </button>
                                    </div>
                                </div>
                            </div>

                            <div style="margin-top: 20px; width: 480px; height: 300px; overflow-y: auto; padding: 10px;">
                                <!-- Thêm phần chọn loại, size, đường đá, topping -->
                                <div style="display: flex; flex-direction: column; gap: 20px;">
                                    <div>
                                        <strong>Chọn loại:</strong>
                                        <div style="display: flex; gap: 20px;background-color: #f0f0f0; padding: 10px; border-radius: 10px;">
                                            <div style="flex: 1;">
                                                <input type="radio" id="cold" name="temperature" value="Lạnh" checked onclick="updateTemperature('Lạnh')">
                                                <label for="cold">Lạnh</label>
                                            </div>
                                            <div style="flex: 1;">
                                                <input type="radio" id="hot" name="temperature" value="Nóng" onclick="updateTemperature('Nóng')">
                                                <label for="hot">Nóng</label>
                                            </div>
                                        </div>
                                    </div>

                                    <div>
                                        <strong>Chọn size:</strong>
                                        <div style="display: flex; gap: 20px;background-color: #f0f0f0; padding: 10px; border-radius: 10px;">
                                            <div style="flex: 1;">
                                                    <input type="radio" id="sizeM" name="size" value="M"
                                                    checked onclick="updateSize('M', ${data.price}, ${data.priceL})">
                                                <label for="sizeM">Size M</label>
                                            </div>
                                            <div style="flex: 1;">
                                                <input type="radio" id="sizeL" name="size" value="L"
                                                    onclick="updateSize('L', ${data.price}, ${data.priceL})">
                                                <label for="sizeL">Size L</label>
                                            </div>
                                        </div>
                                    </div>

                                    <div>
                                        <strong>Chọn đường:</strong>
                                        <div style="margin-top: 10px; background-color: #f0f0f0; padding: 10px; border-radius: 10px;">
                                            <div style="display: flex; gap: 20px;">
                                                <div style="flex: 1;">
                                                    <input type="radio" id="sugar100" name="sugarAmount" value="100" checked onclick="updateSugarAmount()">
                                                    <label for="sugar100">100% đường</label>
                                                </div>
                                                <div style="flex: 1;">
                                                    <input type="radio" id="sugar50" name="sugarAmount" value="50" onclick="updateSugarAmount()">
                                                    <label for="sugar50">50% đường</label>
                                                </div>
                                            </div>
                                            <div style="display: flex; gap: 20px; margin-top: 10px;">
                                                <div style="flex: 1;">
                                                    <input type="radio" id="sugar30" name="sugarAmount" value="30" onclick="updateSugarAmount()">
                                                    <label for="sugar30">30% đường</label>
                                                </div>
                                                <div style="flex: 1;">
                                                    <input type="radio" id="sugar0" name="sugarAmount" value="0" onclick="updateSugarAmount()">
                                                    <label for="sugar0">0% đường</label>
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                    <div id="iceAmountContainer">
                                        <strong>Chọn đá:</strong>
                                        <div style="margin-top: 10px; background-color: #f0f0f0; padding: 10px; border-radius: 10px;">
                                            <div style="display: flex; gap: 20px;">
                                                <div style="flex: 1;">
                                                    <input type="radio" id="ice100" name="iceAmount" value="100" checked onclick="updateIceAmount()">
                                                    <label for="ice100">100% đá</label>
                                                </div>
                                                <div style="flex: 1;">
                                                    <input type="radio" id="ice50" name="iceAmount" value="50" onclick="updateIceAmount()">
                                                    <label for="ice50">50% đá</label>
                                                </div>
                                            </div>
                                            <div style="display: flex; gap: 20px; margin-top: 10px;">
                                                <div style="flex: 1;">
                                                    <input type="radio" id="ice30" name="iceAmount" value="30" onclick="updateIceAmount()">
                                                    <label for="ice30">30% đá</label>
                                                </div>
                                                <div style="flex: 1;">
                                                    <input type="radio" id="ice0" name="iceAmount" value="0" onclick="updateIceAmount()">
                                                    <label for="ice0">0% đá</label>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div>
                                        <strong>Chọn topping:</strong>
                    <div style="margin-top: 10px; background-color: #f0f0f0; padding: 10px; border-radius: 10px;">
                        <div style="display: flex; flex-direction: column; gap: 10px;">
                            ${Object.keys(data.toppingPrices).map(topping => `
                                <div style="display: flex; justify-content: space-between; align-items: center;">
                                    <div style="flex: 1;">
                                        <input type="checkbox" id="${topping}" name="topping" value="${data.toppingPrices[topping]}" onclick="updateToppings(this)">
                                        <label for="${topping}">${topping}</label>
                                    </div>
                                    <div style="flex: 0 0 auto;">
                                        <span>+${data.toppingPrices[topping].toLocaleString()} VND</span>
                                    </div>
                                </div>
                            `).join('')}
                        </div>
                    </div>
                </div>

                                </div>
                            </div>
                        `;

        // Hiển thị modal
        $('#productModal').modal('show');
    }

    function updateSize(size, price, priceL) {
        const basePrice = size === 'M' ? price : priceL;
        selectedSize = size; // Cập nhật kích thước đã chọn
        document.getElementById('basePrice').innerText = basePrice.toLocaleString() + ' VND';
        updatePrice();
    }

    function updateTemperature(temperature) {
        if (temperature === 'Nóng') {
            selectedIce = "0"; // Đặt mặc định đá là 0% khi chọn loại nóng
            document.getElementById("ice0").checked = true; // Đánh dấu lựa chọn đá là 0%
            document.getElementById("iceAmountContainer").style.display = 'none'; // Ẩn các lựa chọn đá
        } else {
            document.getElementById("iceAmountContainer").style.display = 'block'; // Hiện lại các lựa chọn đá
            // Giữ lại lựa chọn đá hiện tại nếu người dùng đã chọn
        }
        updatePrice();
    }

    function updateToppings(checkbox) {
        const toppingName = checkbox.id; // Lấy tên topping từ id của checkbox
        const toppingPrice = parseInt(checkbox.value); // Lấy giá topping

        if (checkbox.checked) {
            // Tạo đối tượng cho topping và thêm vào mảng
            selectedToppings.push({ name: toppingName, price: toppingPrice });
        } else {
            // Tìm và xóa topping không còn được chọn
            const index = selectedToppings.findIndex(topping => topping.price === toppingPrice);
            if (index > -1) {
                selectedToppings.splice(index, 1); // Xóa topping
            }
        }
        updatePrice(); // Cập nhật giá sau khi chọn hoặc bỏ chọn topping
    }

    function updateSugarAmount() {
        selectedSugar = document.querySelector('input[name="sugarAmount"]:checked').value; // Lưu lại lựa chọn đường
    }

    function updateIceAmount() {
        selectedIce = document.querySelector('input[name="iceAmount"]:checked').value; // Lưu lại lựa chọn đá
    }

    function calculateToppingPrice() {
        return selectedToppings.reduce((total, topping) => total + topping.price, 0);
    }

    function updatePrice() {
        const quantity = parseInt(document.getElementById("quantity").innerText);
        const basePrice = parseInt(document.getElementById("basePrice").innerText.replace(/,/g, '').replace(' VND', '').trim());
        const totalPrice = (basePrice * quantity) + calculateToppingPrice();

        document.getElementById("priceButton").innerText = totalPrice.toLocaleString() + ' VND'; // Đảm bảo hiển thị đúng định dạng
    }

    function increaseQuantity() {
        let quantity = parseInt(document.getElementById("quantity").innerText);
        quantity++;
        document.getElementById("quantity").innerText = quantity;
        updatePrice();
    }

    function decreaseQuantity() {
        let quantity = parseInt(document.getElementById("quantity").innerText);
        if (quantity > 1) {
            quantity--;
            document.getElementById("quantity").innerText = quantity;
            updatePrice();
        }
    }

    function addToCart(productName, productPrice, quantity, imgURL, size, sugar, ice) {
        let item = {
            name: productName,
            price: productPrice,
            quantity: quantity,
            img: imgURL,
            size: size,
            sugar: sugar,
            ice: ice
        };
        console.log('số lượng:', item.quantity);
        console.log('giá:', item.price);
        const existingItem = cart.find(cartItem => cartItem.name === productName &&
            cartItem.size === size &&
            cartItem.sugar === sugar &&
            cartItem.ice === ice);
        if (existingItem) {
            existingItem.quantity += quantity; // Cập nhật số lượng
        } else {
            cart.push(item); // Thêm sản phẩm mới vào giỏ hàng
        }
        // Cập nhật giỏ hàng trong sessionStorage
        //sessionStorage.setItem('cart', JSON.stringify(cart));
        localStorage.setItem('cart', JSON.stringify(cart));
        updateCartDisplay();

    }

    function updateCartDisplay() {
        const cartDisplay = document.querySelector('.cart-ss1');
        const totalQuantityElement = document.querySelector('.cart-ss2-two');
        const totalPriceElement = document.querySelector('.cart-ss2-four');

        const cartCount = cart.reduce((total, item) => total + item.quantity, 0);
        const totalPrice = cart.reduce((total, item) => total + (item.price * item.quantity), 0);

        console.log('Tổng sp:', cartCount);
        console.log('Tổng giá:', totalPrice);

        // Cập nhật tổng số lượng sản phẩm
        totalQuantityElement.textContent = cartCount;

        // Cập nhật tổng giá trị
        totalPriceElement.textContent = totalPrice > 0 ? `${totalPrice.toLocaleString()}đ` : '0đ';

        // Xóa nội dung hiện tại của giỏ hàng
        cartDisplay.innerHTML = '';

        if (cartCount === 0) {
            cartDisplay.innerHTML = 'Chưa có sản phẩm nào!';
        } else {
            // Tạo danh sách sản phẩm với thông tin chi tiết
            const productList = cart.map(item => `
                            <div>
                                <strong>${item.name} (${item.size})</strong> <br>
                                ${item.sugar}% đường, ${item.ice}% đá <br>
                            </div>
                        `).join('');

            // Cập nhật nội dung giỏ hàng với thông tin sản phẩm
            cartDisplay.innerHTML += productList;
        }
    }
    function checkCartBeforeCheckout() {
        const cartCount = cart.reduce((total, item) => total + item.quantity, 0);
        const noProductMessage = document.getElementById('noProductMessage');

        if (cartCount === 0) {
            noProductMessage.style.display = 'block'; // Hiện thông báo nếu giỏ hàng trống
        } else {
            noProductMessage.style.display = 'none'; // Ẩn thông báo nếu có sản phẩm
            window.location.href = '/Test/Payment'; // Chuyển đến trang thanh toán
        }
    }

</script>